---
import type { MenuItemDefinition } from '../utils/menu-item-definition';
import { LightBlueTones } from '../utils/main-menu-settings';
import Hamburger from './Hamburger.astro';
import MainMenu from './MainMenu.astro';
import { Icon } from 'astro-icon/components';

const menuItemDefinitions: MenuItemDefinition[] = [
    { text: 'Home', url: '/', title: 'Fielded Text Home page' },
    {
        text: 'Introduction',
        url: '/introduction/',
        children: [
            { text: 'Capabilities', url: '/introduction/capabilities/' },
            { text: 'Structure', url: '/introduction/file-structure/' },
            { text: 'FAQ', url: '/introduction/faq/' },
        ],
    },
    { text: 'Software', url: '/software/' },
    { text: 'Standard', url: '/standard/' },
    { text: 'News', url: '/news/' },
];
---

<nav class="navbar">
    <div class="navbar-narrow-left">
        <Icon name="noun-comma-separated-value-1512118" />
    </div>

    <div class="navbar-wide-left">
        <Icon name="noun-comma-separated-value-1512118" />
    </div>

    <MainMenu settings={LightBlueTones.mainMenuSettings}, menuItemDefinitions={menuItemDefinitions} />

    <div class="narrow-heading">
        <slot name="narrow-heading" />
    </div>

    <div class="navbar-wide-right">
        <div class="navbar-wide-right-icon">
            <Icon name="noun-comma-separated-value-1512118" />
        </div>
        <Hamburger settings={LightBlueTones.hamburgerSettings} />
    </div>
</nav>

<style lang="scss" define:vars={{
    wideNavBarBackgroundColor: LightBlueTones.wideMenuBackgroundColor,
    hamburgerWidth: LightBlueTones.hamburgerSettings.width,
}}>
    @use '/src/styles/scss/main-menu-config'; // Sass is only used to to allow media breakpoint to be specified by a variable.  Otherwise rest of style is plain CSS.

    .navbar {
        width: 100%;
        background-color: var(--wideNavBarBackgroundColor, #d0dae0);
        margin: 0;
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: space-between;

        > .narrow-heading {
            display: none;
        }

        > .navbar-narrow-left {
            width: var(--hamburgerWidth, 1.8em);
            display: none;
        }

        > .navbar-wide-left {
            display: flex;
            align-items: center;
            flex: 0 0 auto;
        }

        > .navbar-wide-right {
            display: flex;
            align-items: center;
            flex: 0 0 auto;
        }

        [data-icon="noun-comma-separated-value-1512118"] {
            color: gray;
            /* OR */
            fill: gray;
        }

        @media screen and ((hover: none) or (width < main-menu-config.$narrow-breakpoint)) {
            > .narrow-heading {
                display: flex;
                align-items: center;
            }

            > .navbar-narrow-left {
                display: flex;
                align-items: center;
            }

            > .navbar-wide-left {
                display: none;
            }

            > .navbar-wide-right {
                width: var(--hamburgerWidth, 1.8em);

                > .navbar-wide-right-icon {
                    display: none;
                }
            }
        }
    }
</style>

<script>
    import '../scripts/menu-click-processor';
</script>
